---
layout: post
title: Restoring the old posts
---


OK, here's a test of how WYMeditor works, because I'm going to try to copy/paste some code in here. I just had a little foray into my past with XSLT. I had 344 old blog posts (starting year 2000!) to convert from XML to SQL. Nothing better than XSL for the job! Here it is.

NB: I haven't restored images as of this writing.

<pre><br />&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"&gt;<br />  &lt;xsl:output method="xml" indent="no" omit-xml-declaration="yes" encoding="ASCII"/&gt;<br />  &lt;xsl:strip-space elements="*"/&gt;<br />  &lt;xsl:variable name="ucletters"&gt;ABCDEFGHIJKLMNOPQRSTUVWXYZ- &lt;/xsl:variable&gt;<br />  &lt;xsl:variable name="lcletters"&gt;abcdefghijklmnopqrstuvwxyz-_&lt;/xsl:variable&gt;<br />  &lt;xsl:variable name="allowed_letters"&gt;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_ &lt;/xsl:variable&gt;<br />  &lt;xsl:template match="/"&gt;<br />    &lt;xsl:text&gt; USE `sw-blog-dev`;<br />    &lt;/xsl:text&gt;<br />    &lt;xsl:apply-templates select="weblog/entry"/&gt;<br />  &lt;/xsl:template&gt;<br />  &lt;xsl:template match="entry"&gt;<br />    &lt;xsl:text&gt;INSERT INTO `sw-blog-dev`.`posts` (`author_id`,`created_at`,`modified_at`,`permalink`,`title`,`synd_title`,`summary`,`body_raw`,`extended_raw`,`body`,`extended`,`is_active`,`custom_field_1`,`custom_field_2`,`custom_field_3`,`body_searchable`,`extended_searchable`,`text_filter`,`comment_status`) VALUES<br />    &lt;/xsl:text&gt;<br />    &lt;xsl:text&gt;  (2,&lt;/xsl:text&gt; &lt;!-- author_id --&gt;<br />    &lt;xsl:text&gt;'&lt;/xsl:text&gt;&lt;xsl:apply-templates select="date"/&gt;&lt;xsl:text&gt; 12:00:00',&lt;/xsl:text&gt; &lt;!-- created_at --&gt;<br />    &lt;xsl:text&gt;'&lt;/xsl:text&gt;&lt;xsl:apply-templates select="date"/&gt;&lt;xsl:text&gt; 12:00:00',&lt;/xsl:text&gt; &lt;!-- modified_at --&gt;<br />    &lt;xsl:text&gt;'&lt;/xsl:text&gt;&lt;xsl:apply-templates mode="PERMALINK" select="title"/&gt;&lt;xsl:text&gt;',&lt;/xsl:text&gt;&lt;!-- permalink --&gt;<br />    &lt;xsl:text&gt;'&lt;/xsl:text&gt;&lt;xsl:apply-templates mode="XHTML" select="title/text()"/&gt;&lt;xsl:text&gt;',&lt;/xsl:text&gt;&lt;!-- title --&gt;<br />    &lt;xsl:text&gt;'&lt;/xsl:text&gt;&lt;xsl:apply-templates mode="SYND_TITLE" select="content"/&gt;&lt;xsl:text&gt;',&lt;/xsl:text&gt;&lt;!-- synd_title --&gt;<br />    &lt;xsl:text&gt;'',&lt;/xsl:text&gt;&lt;!-- summary --&gt;<br />    &lt;xsl:text&gt;'&lt;/xsl:text&gt;&lt;xsl:apply-templates mode="XHTML" select="content"/&gt;&lt;xsl:text&gt;',&lt;/xsl:text&gt;&lt;!-- body_raw --&gt; <br />    &lt;xsl:text&gt;'',&lt;/xsl:text&gt;&lt;!-- extended_raw --&gt;<br />    &lt;xsl:text&gt;'&lt;/xsl:text&gt;&lt;xsl:apply-templates mode="XHTML" select="content"/&gt;&lt;xsl:text&gt;',&lt;/xsl:text&gt;&lt;!-- body --&gt;<br />    &lt;xsl:text&gt;'',&lt;/xsl:text&gt;&lt;!-- extended --&gt;<br />    &lt;xsl:text&gt;1,&lt;/xsl:text&gt;&lt;!-- is_active --&gt;<br />    &lt;xsl:text&gt;'',&lt;/xsl:text&gt; &lt;!-- custom_field_1 --&gt;<br />    &lt;xsl:text&gt;'',&lt;/xsl:text&gt; &lt;!-- custom_field_2 --&gt;<br />    &lt;xsl:text&gt;'',&lt;/xsl:text&gt; &lt;!-- custom_field_3 --&gt;<br />    &lt;xsl:text&gt;'&lt;/xsl:text&gt;&lt;xsl:apply-templates mode="TEXT_ONLY" select="content"/&gt;&lt;xsl:text&gt;',&lt;/xsl:text&gt;&lt;!-- body_searchable --&gt;<br />    &lt;xsl:text&gt;'',&lt;/xsl:text&gt;&lt;!-- extended_searchable --&gt;<br />    &lt;xsl:text&gt;'markdown',&lt;/xsl:text&gt;&lt;!-- text_filter --&gt;<br />    &lt;xsl:text&gt;1);<br />    &lt;/xsl:text&gt;&lt;!-- comment_status --&gt;<br />  &lt;/xsl:template&gt;<br />  &lt;!-- must remember to backslash all single quotes --&gt;<br />  &lt;xsl:template match="date"&gt;<br />    &lt;xsl:value-of select="translate(.,'/','-')" /&gt;<br />  &lt;/xsl:template&gt;<br />  &lt;xsl:template mode="PERMALINK" match="title"&gt;<br />    &lt;xsl:value-of select="substring(<br />                            translate(<br />                              translate(., translate(., $allowed_letters, ''), ''),<br />                              $ucletters,<br />                              $lcletters<br />                            ),<br />                          0,42)"/&gt;<br />  &lt;/xsl:template&gt;<br />  &lt;xsl:template mode="SYND_TITLE" match="content"&gt;<br />    &lt;xsl:call-template name="escapesinglequotes"&gt;<br />      &lt;xsl:with-param name="arg1"&gt;&lt;xsl:value-of select="normalize-space( substring(.,0,42) )"/&gt;&lt;/xsl:with-param&gt;<br />    &lt;/xsl:call-template&gt;<br />    &lt;xsl:text&gt;...&lt;/xsl:text&gt;<br />  &lt;/xsl:template&gt;<br />  &lt;xsl:template mode="TEXT_ONLY" match="content"&gt;<br />    &lt;xsl:call-template name="escapesinglequotes"&gt;<br />      &lt;xsl:with-param name="arg1"&gt;&lt;xsl:value-of select="normalize-space(.)"/&gt;&lt;/xsl:with-param&gt;<br />    &lt;/xsl:call-template&gt;<br />  &lt;/xsl:template&gt;<br />  &lt;xsl:template mode="XHTML" match="content"&gt;<br />    &lt;xsl:apply-templates mode="XHTML"/&gt;<br />  &lt;/xsl:template&gt;<br />  &lt;xsl:template mode="XHTML" match="node()|@*"&gt;<br />    &lt;xsl:copy&gt;<br />      &lt;xsl:apply-templates mode="XHTML" select="@*"/&gt;<br />      &lt;xsl:apply-templates mode="XHTML"/&gt;<br />    &lt;/xsl:copy&gt;<br />  &lt;/xsl:template&gt;<br />  &lt;xsl:template mode="XHTML" match="text()"&gt;<br />    &lt;xsl:call-template name="escapesinglequotes"&gt;<br />      &lt;xsl:with-param name="arg1"&gt;&lt;xsl:value-of select="normalize-space(.)"/&gt;&lt;/xsl:with-param&gt;<br />    &lt;/xsl:call-template&gt;<br />    &lt;xsl:text&gt; &lt;/xsl:text&gt;<br />  &lt;/xsl:template&gt;<br />  &lt;xsl:template mode="XHTML" match="@*"&gt;<br />    &lt;xsl:attribute name="{name()}"&gt;<br />      &lt;xsl:call-template name="escapesinglequotes"&gt;<br />        &lt;xsl:with-param name="arg1"&gt;&lt;xsl:value-of select="normalize-space(.)"/&gt;&lt;/xsl:with-param&gt;<br />      &lt;/xsl:call-template&gt;<br />    &lt;/xsl:attribute&gt;<br />  &lt;/xsl:template&gt;<br />  &lt;xsl:template name="escapesinglequotes"&gt;<br />    &lt;xsl:param name="arg1"/&gt;<br />    &lt;xsl:variable name="apostrophe"&gt;'&lt;/xsl:variable&gt;<br />    &lt;xsl:choose&gt;<br />      &lt;!-- this string has at least on single quote --&gt;<br />      &lt;xsl:when test="contains($arg1, $apostrophe)"&gt;<br />        &lt;xsl:if test="string-length(normalize-space(substring-before($arg1, $apostrophe))) &gt; 0"&gt;&lt;xsl:value-of select="substring-before($arg1, $apostrophe)" disable-output-escaping="yes"/&gt;\\'&lt;/xsl:if&gt;<br />        &lt;xsl:call-template name="escapesinglequotes"&gt;<br />          &lt;xsl:with-param name="arg1"&gt;&lt;xsl:value-of select="substring-after($arg1, $apostrophe)" disable-output-escaping="yes"/&gt;&lt;/xsl:with-param&gt;<br />        &lt;/xsl:call-template&gt;<br />      &lt;/xsl:when&gt;<br />      &lt;!-- no quotes found in string, just print it --&gt;<br />      &lt;xsl:when test="string-length(normalize-space($arg1)) &gt; 0"&gt;&lt;xsl:value-of select="normalize-space($arg1)"/&gt;&lt;/xsl:when&gt;<br />    &lt;/xsl:choose&gt;<br />  &lt;/xsl:template&gt;<br />&lt;/xsl:stylesheet&gt;</pre>

Niiiiiiice.
