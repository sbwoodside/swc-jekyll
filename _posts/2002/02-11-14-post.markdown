---
layout: post
title: post 
---


Have you heard of <a href="http://www.axkit.org/index.xml">AxKit </a>? Neither had I. But I'm looking at tools for developing web applications. I'm lazy so I want to do as little work as possible. AxKit seems like a possible answer. Oh yeah, and it has to use perl ;-) No php or java for me. In fact, this site is all php, but really I'm just using it for SSI. Funny thing is that my server has PHP enabled but not apache SSI. Oh well. 

Another spec for my hypothetical web application is that I don't want to use SQL. OK, I realize that's completely stupid, because my web app is going to need a database. But frankly I don't like SQL, the syntax is horrid etc. etc. etc.. (thank god I discovered MyPHPadmin). So I'm looking for a way to replace as much SQL with XML as possible... maybe even to the point of writing all my schemas in XML, using some kind of XML query language instead of SQL, etc. 

Another reason I'm looking at AxKit is that it's fully buzzword compliant. I'm slowly grokking XML and XSLT (as usually, they are turning out to be pretty obvious once I figure it out) and they do seem like powerful tools. EmbPerl was the other tool I was looking hard at... but there's no HOWTO for OS X, and <a href="http://www.kings-of-chaos.de/~bboksa/axkit_macosx.html">there is one </a>for AxKit. 

In other news, I've made some discoveries about CSS that are making my life a lot easier. Instead of having to put class="foo" in each 

 tag, I set up a div class that applies certain styles to it's 

 children. And here's where I finally figured out where the "cascading" part of CSS comes from. It's not in the .css files, but in the actual content where the cascade occurs. Am I the only person in the world who didn't find that obvious from the CSS documents all over the place. So, check out the source code to <a href="/projects/itletter.html">this document </a>to see how much easier my life is with this new system.
